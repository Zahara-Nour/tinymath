import { math } from '../src/math/math'
import compare from '../src/math/compare'

describe('Testing comparison between 2 nodes', () => {
	const t = [
		['2', '3', -1],
		['2', '2', 0],
		['3', '2', 1],
		['2', 'a', -1],
		['2', '?', -1],
		['a', '?', -1],
		['?', '?', 0],
		['-3', '2', 1],
		['3', '-2', -1],
		['-1', '2', 1],
		['+3', '2', 1],
		['+1', '2', 1],
		['1', 'true', -1],
		['1', 'false', -1],

		['1', '2*3', -1],
		['2', '2*3', -1],
		['3', '2*3', -1],

		['a', 'b', -1],
		['a', 'a', 0],
		['b', 'a', 1],
		['2a', '3a', -1],
		['2a', '2a', 0],
		['3a', '2a', 1],

		['3a', '2b', 1],
		['2a', '2b', -1],
		['a', '3a', -1],
		['a', 'ab', -1],
		['ab', 'a', 1],
		['a', 'aa', -1],
		['a', 'bc', -1],
		['b', 'ac', -1],
		['ab', 'ba', -1],

		['a', 'a+b', -1],
		['a+b', 'a', 1],
		['b', 'a+b', -1],
		['a+b', 'b', 1],
		['a+b', 'b+a', -1],

		['a^2', 'a^3', -1],
		['a^2', 'a^2', 0],
		['a^3', 'a^2', 1],
		['a^2', 'b^2', -1],
		['b^2', 'a^2', 1],

		// ['a^(-1)', '1/a', 0],
		// ['(a+1)(b+2)/(a+1)', 'b+2', 0],

		['1', 'cos(1)', -1],
		['cos(1)', '1', 1],
		['a', 'cos(1)', -1],
		['cos(1)', 'a', 1],
		['cos(1)', 'cos(2)', -1],
		['cos(2)', 'cos(1)', 1],
		['cos(1)', 'cos(a)', -1],
		['cos(a)', 'cos(1)', 1],

		['sin(1)', 'sin(2)', -1],
		['sin(2)', 'sin(1)', 1],
		['sin(1)', 'sin(a)', -1],
		['sin(a)', 'sin(1)', 1],

		['tan(1)', 'tan(2)', -1],
		['tan(2)', 'tan(1)', 1],
		['tan(1)', 'tan(a)', -1],
		['tan(a)', 'tan(1)', 1],

		['ln(1)', 'ln(2)', -1],
		['ln(2)', 'ln(1)', 1],
		['ln(1)', 'ln(a)', -1],
		['ln(a)', 'ln(1)', 1],

		['log(1)', 'log(2)', -1],
		['log(2)', 'log(1)', 1],
		['log(1)', 'log(a)', -1],
		['log(a)', 'log(1)', 1],

		['exp(1)', 'exp(2)', -1],
		['exp(2)', 'exp(1)', 1],
		['exp(1)', 'exp(a)', -1],
		['exp(a)', 'exp(1)', 1],

		['cos(1)', 'sin(1)', -1],
		['sin(1)', 'cos(1)', 1],

		['1', '1=1', -1],
		['1', '1<1', -1],
		['1', '1<=1', -1],
		['1', '1>1', -1],
		['1', '1>=1', -1],
		['1=1', '1', 1],
		['1<1', '1', 1],
		['1<=1', '1', 1],
		['1>1', '1', 1],
		['1>=1', '1', 1],

		['1=1', '1!=1', -1],
		['1!=1', '1<1', -1],
		['1<1', '1<=1', -1],
		['1<=1', '1>1', -1],
		['1>1', '1>=1', -1],

		['1=1', '1=1', 0],
		['1=1', '2=1', -1],
		['2=1', '1=1', 1],
		['1=1', '1=2', -1],
		['1=2', '1=1', 1],
		['1=2', '2=1', -1],
		['2=1', '1=2', 1],
	]

	test.each(t)('%s and %s', (e, f, expected) => {
		expect(compare(math(e), math(f))).toBe(expected)
	})
})
